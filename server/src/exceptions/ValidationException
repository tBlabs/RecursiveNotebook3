export class HandlerException : IShortMessage
{
    shortMessage: string;
}

@Exception()
export class ValidationException extends HandlerException implements IShortMessage, IHttpRespondCode
{
    shortMessage = "Validaion error";
    httpRespondCode = 405;

    // Payload
    fields: string[];
    problems: string[];
}

po serializacji:

{ "validationException" : 
  { 
    "shortMessage": "Validation error",
    "httpRespondCode": 405,                      <------- po co to słać w samym obiekcie?
    "fields": [ "email" ], 
    "problems": [ "Too long" ] 
  } 
}


Czy exception powinien sam decydować o tym jak i gdzie ma być wyświetlany?


ClientComponent()
{
    ClickAction()
    {
        status = ClientServiceFunction();

        SetViewState(status);
    }
}


ClientServiceFunction()
{
    try
    {
        let x = _cqrsBus.Send(XQuery());
    }
    catch (exception)
    {
        if (exception instanceof ValidationException)
        {
            ex = exception as ValidationException;
            if (ex.fields[0] == 'email') return 
        }
        if (exception instanceof PermissionException)
        {
            return UnableToExecute;
        }
        if (exception instanceof ConnectionException)
        {

        }
        if (exception instanceof TimeoutException)
        {

        }
    }
}